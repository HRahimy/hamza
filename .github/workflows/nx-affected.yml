name: NX Affected CI

on:
  push:
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GKE_CLUSTER: cost-optimized-cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: hamzasite # Add your deployment name here.
  IMAGE: hamzasite
  SITE_PUBLIC_HOST: test.site.hrahimy.com

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Build API
        shell: bash
        run: yarn run build api --prod

      - name: Build Site
        shell: bash
        run: yarn run build site --prod

      - name: Create build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: built-app
          path: dist

  publish-deploy:
    needs: [build]
    name: Publish docker image. Deploy.
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: built-app
          path: dist

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCR_SERVICE_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GCR_SERVICE_KEY }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build . \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

#      - name: Prep helm chart
#        run: echo ${{ secrets.SITE_CHART_VALUES }} | base64 -d > ./charts/site/values.yaml

      - uses: WyriHaximus/github-action-helm3@v2
        name: Deploy
        with:
          exec: |-
            helm upgrade ${{ env.DEPLOYMENT_NAME }} ./charts/site/ \
            --install --wait --atomic \
            --namespace=dev \
            --create-namespace \
            --set="namePrefix=$DEPLOYMENT_NAME" \
            --set="imageRefUri=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --set=deploymentNamespace=dev \
            --set="webHost=$SITE_PUBLIC_HOST" \
            --set="sqlDb.name=$SQLDB_NAME" \
            --set="sqlDb.user=$SQLDB_USER" \
            --set="sqlDb.password=$SQLDB_PASSWORD" \
        env:
          SQLDB_NAME: ${{ secrets.SQLDB_NAME }}
          SQLDB_USER: ${{ secrets.SQLDB_USER }}
          SQLDB_PASSWORD: ${{ secrets.SQLDB_PASSWORD }}
